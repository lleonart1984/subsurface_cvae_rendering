float1 softplusActivation(float1 x) { return log(1 + exp(x)); }

float2 softplusActivation(float2 x) { return log(1 + exp(x)); }

float3 softplusActivation(float3 x) { return log(1 + exp(x)); }

float4 softplusActivation(float4 x) { return log(1 + exp(x)); }

void lenModel(float _input[4], out float _output[2]) {
	float4 n_0_0 = float4(_input[0], _input[1], _input[2], _input[3]);
	float4 n_1_0 = softplusActivation(mul(n_0_0, float4x4(0.012227199f, -0.0010170817f, -0.5674155f, 0.45805424f, 3.79438f, -0.1342665f, -0.38031068f, 2.771766f, 0.21132214f, 0.18918605f, 0.17909779f, 1.1368352f, -2.913572e-05f, 1.9844532e-05f, 7.048897e-05f, 8.0343045e-05f)) + float4(-3.2368076f, 0.409098f, -0.5859048f, -3.379865f));

	float4 n_1_1 = softplusActivation(mul(n_0_0, float4x4(0.45222762f, -1.9585129f, -0.014399661f, -0.0001810684f, -0.1853533f, 0.1247916f, 0.41096577f, 9.048451f, 0.55763036f, -1.4858954f, -0.5930922f, 0.086931705f, -3.878262e-06f, 0.000121876605f, -4.6470697e-05f, -9.0866466e-05f)) + float4(0.35126084f, 1.7407341f, 2.1752603f, -10.23915f));

	float4 n_2_0 = softplusActivation(mul(n_1_0, float4x4(-1.1186987f, 0.057238813f, -0.9759079f, -3.7212763f, 6.0738697f, -0.03648196f, -1.0132909f, 14.345376f, -8.06222f, -0.13862228f, 0.042499125f, -23.343077f, -0.2958306f, 0.21018304f, 0.062260732f, -0.9027902f)) + mul(n_1_1, float4x4(0.5017016f, -0.5387626f, 0.007776936f, 1.6035187f, -5.1948724f, -0.14089397f, -9.417294f, -14.780513f, -0.9620284f, 0.39485058f, -0.35700166f, -3.172685f, 4.561215f, -0.107335106f, 8.276829f, 17.1523f)) + float4(2.759749f, -1.5491414f, 0.18320869f, 6.6770496f));

	float4 n_2_1 = softplusActivation(mul(n_1_0, float4x4(0.20474908f, 0.07225794f, -0.12129117f, 1.9549369f, 8.034075f, 0.4903353f, -0.14705716f, -0.79258776f, 0.88088065f, 0.46101233f, -0.2712086f, -0.9456587f, 0.33036977f, 0.084506586f, 0.016230127f, -0.21600455f)) + mul(n_1_1, float4x4(-0.31799272f, 0.43225f, -0.0984428f, 0.6949821f, -0.46519148f, -0.12719043f, -0.60726273f, -0.22673546f, 1.2928299f, 0.06313226f, -0.1387196f, 0.11745155f, -0.42702115f, -0.1148365f, -1.1784304f, -0.017075999f)) + float4(6.426423f, 1.6992921f, 0.022542793f, -4.4829774f));

	float2 n_3_0 = mul(n_2_0, float4x2(-0.006597868f, 11.125106f, 0.38977602f, 0.06495509f, -1.544505f, 1.8985445f, 0.16756812f, -3.942414f)) + mul(n_2_1, float4x2(-0.19154255f, -1.2981768f, 0.57924235f, 0.7488316f, -0.25238994f, -16.417233f, -0.58167535f, -0.07085703f)) + float2(1.4556733f, 1.9378741f);

	_output[0] = n_3_0[0];
	_output[1] = n_3_0[1];
}
void pathModel(float _input[8], out float _output[6]) {
	float4 n_0_0 = float4(_input[0], _input[1], _input[2], _input[3]);
	float4 n_0_1 = float4(_input[4], _input[5], _input[6], _input[7]);
	float4 n_1_0 = softplusActivation(mul(n_0_0, float4x4(-0.0017889664f, -0.003047063f, -0.0039712735f, 0.008070616f, -0.28410342f, -0.86975706f, -0.74206185f, 6.6396637f, -22.528177f, 0.2713178f, 0.3210271f, -0.8723531f, -2.1317797e-05f, -1.1661867e-05f, -5.4246295e-05f, -4.2344604e-06f)) + mul(n_0_1, float4x4(1.6577793e-05f, -6.5564964e-05f, 9.7371274e-05f, -0.00017102134f, -0.23548537f, -1.525556f, 0.76220906f, 1.0328121f, 2.071985e-05f, 1.1784909e-05f, -2.1719701e-05f, 0.00020898983f, 4.308522e-05f, -0.00018947721f, -3.9364528e-05f, 0.00012590773f)) + float4(-1.4206018f, -1.7469022f, -1.5604774f, -8.467019f));

	float4 n_1_1 = softplusActivation(mul(n_0_0, float4x4(0.0026534444f, 0.0016469562f, -0.0061638826f, -0.0052412315f, 0.8332922f, 0.26825222f, -2.7625506f, -1.3540461f, -24.110039f, -2.1478505f, -0.7026967f, 0.45777246f, 1.49475045e-05f, 6.807128e-05f, 0.00011416216f, -4.8161866e-05f)) + mul(n_0_1, float4x4(2.6573372e-05f, 5.426028e-05f, -6.85443e-05f, -3.2533564e-05f, 0.3751349f, 0.11704072f, 0.69876647f, -0.47764722f, -6.765741e-05f, -8.665894e-06f, 8.442155e-05f, -3.2126198e-05f, 1.8554196e-05f, 7.982576e-05f, 3.943228e-05f, -4.727402e-05f)) + float4(-1.4597381f, -0.7416978f, -4.7318287f, -0.44578785f));

	float4 n_1_2 = softplusActivation(mul(n_0_0, float4x4(-0.0034339218f, -0.012317171f, -0.0021536206f, 0.0027778249f, -0.895751f, -2.976381f, -0.34432966f, 0.9448042f, 0.30271608f, -28.415054f, 0.1729694f, -0.2618927f, -8.210554e-05f, -1.3612737e-05f, 7.395033e-05f, -0.00010285175f)) + mul(n_0_1, float4x4(-9.771176e-05f, -9.154254e-06f, -5.931341e-05f, -1.2214977e-05f, -0.21963637f, -1.1587687f, -1.3170009f, 0.46017325f, 1.2432811e-06f, -2.0443527e-05f, 7.1107104e-05f, -1.5040513e-05f, -1.8788162e-06f, 1.4088637e-05f, 6.854718e-05f, -1.9493351e-05f)) + float4(-1.681308f, -1.8252116f, -1.526683f, -0.6572393f));

	float4 n_2_0 = softplusActivation(mul(n_1_0, float4x4(0.3511662f, -1.2780657f, -0.97030324f, 0.37805307f, 0.09153256f, 0.2407255f, -0.5314885f, 0.011901373f, -0.093414284f, 0.19766533f, -1.9873166f, 0.13489883f, 0.4964505f, 0.23573373f, 0.053321753f, -0.39767867f)) + mul(n_1_1, float4x4(2.2854762f, 0.37169826f, -0.62315196f, -0.5198493f, -0.7031745f, -0.7898553f, 0.39317214f, 0.16396439f, 0.40815789f, -0.7989865f, -5.0340505f, -0.30501708f, -0.43899223f, -0.12659979f, 0.5278261f, 0.2277974f)) + mul(n_1_2, float4x4(0.2955622f, -0.49243486f, -0.08897419f, -0.4628196f, 0.28653732f, -0.97128195f, -5.210615f, -0.1772148f, -0.23775238f, -0.51555395f, -0.71959215f, 0.029084176f, -0.10903536f, 0.13336639f, -2.0899017f, -0.5786035f)) + float4(1.9863642f, -0.0553617f, -0.31526583f, -0.4111592f));

	float4 n_2_1 = softplusActivation(mul(n_1_0, float4x4(-0.1602323f, 2.597478f, -0.31779563f, 2.3517292f, 0.21597292f, -0.22651997f, -3.5723171f, -0.7622821f, -0.028226135f, -0.13600223f, -0.1996691f, -0.19981274f, 0.5191203f, -0.4751868f, -0.16454932f, -2.3320684f)) + mul(n_1_1, float4x4(1.2616556f, 0.92417765f, -0.30204085f, -2.5707228f, 0.13046518f, -0.9594443f, -0.20807761f, -0.706166f, 0.33886358f, 0.07472733f, 1.5122974f, 0.4240748f, -0.21272779f, -0.002686729f, -1.0026338f, 0.25527743f)) + mul(n_1_2, float4x4(0.3256565f, -0.28337634f, -0.09739407f, 0.011748203f, 0.25554514f, -0.3370795f, -3.75038f, -4.4632125f, -0.26987833f, 0.013328341f, 1.7408433f, -0.3784374f, 0.16980585f, -0.6541479f, -0.32073835f, -0.96350414f)) + float4(0.41682842f, 1.9990048f, -0.25257632f, -0.004185221f));

	float4 n_2_2 = softplusActivation(mul(n_1_0, float4x4(-0.42729104f, -6.4111605f, -2.434381f, 3.4858906f, 0.21181396f, -0.19468328f, 0.75777394f, -0.013808f, -0.3417261f, -0.17073402f, -0.049277067f, -0.1781657f, -1.1661369f, -3.242688f, 0.04736043f, -0.7227465f)) + mul(n_1_1, float4x4(-0.65460795f, -3.555353f, -0.7682774f, -0.056873664f, -0.26995623f, -0.8869835f, -1.1267375f, 0.030424343f, 0.8467152f, -1.213175f, 2.0899112f, 0.18010366f, -0.36428308f, -0.06707685f, -1.0394475f, 0.10608732f)) + mul(n_1_2, float4x4(-0.42079392f, 0.15266411f, -0.8264506f, 0.13282974f, -0.43892235f, -2.84657f, -0.962021f, -0.61770374f, -0.40922f, -0.060496315f, -2.9445648f, -0.2183921f, -0.68700516f, -0.5569757f, -0.22434841f, -0.61145145f)) + float4(-0.5463866f, -0.13621347f, 0.06373608f, 0.047016826f));

	float4 n_3_0 = mul(n_2_0, float4x4(-0.26128247f, 0.76217103f, -0.035897497f, -4.1553993f, 1.709687f, -0.06716988f, 0.0003196387f, 2.9759355f, -2.512789f, -0.0049445312f, -0.0013841081f, -3.0769143f, -0.7812128f, 0.33394742f, -0.051440403f, -15.9142885f)) + mul(n_2_1, float4x4(0.084814265f, -1.0304544f, 0.039212026f, -1.1347598f, 0.16974907f, -0.5798434f, 0.011549349f, 0.4294594f, 5.3728094f, -0.016902424f, 0.0017404141f, 7.178672f, 2.1031804f, -0.00033257878f, 0.0022760092f, -0.13855384f)) + mul(n_2_2, float4x4(-2.2580602f, -0.20539814f, -0.011400772f, 6.6299906f, -0.909626f, 0.13979886f, -0.005980391f, 10.691191f, -2.4371562f, 0.031610776f, -0.0019581215f, -8.784554f, -0.044933565f, 0.44662336f, 0.0014866627f, 14.513596f)) + float4(-0.34552568f, 0.20050853f, 0.03300916f, -7.319031f);

	float2 n_3_1 = mul(n_2_0, float4x2(-4.148214f, 2.3845994f, 1.3139602f, -8.715425f, -1.0268284f, 0.730438f, 0.43835708f, 10.425915f)) + mul(n_2_1, float4x2(-2.1955512f, 9.587707f, -3.7176778f, -10.212647f, -1.4962324f, -4.248617f, -3.1554463f, -3.0151513f)) + mul(n_2_2, float4x2(-0.7975159f, -20.508577f, 32.88867f, 58.382545f, 4.1267767f, 6.0072823f, -8.909747f, -19.543886f)) + float2(4.332678f, -6.790347f);

	_output[0] = n_3_0[0];
	_output[1] = n_3_0[1];
	_output[2] = n_3_0[2];
	_output[3] = n_3_0[3];
	_output[4] = n_3_1[0];
	_output[5] = n_3_1[1];
}
void scatModel(float _input[12], out float _output[12]) {
	float4 n_0_0 = float4(_input[0], _input[1], _input[2], _input[3]);
	float4 n_0_1 = float4(_input[4], _input[5], _input[6], _input[7]);
	float4 n_0_2 = float4(_input[8], _input[9], _input[10], _input[11]);
	float4 n_1_0 = softplusActivation(mul(n_0_0, float4x4(-0.005268467f, -0.012961797f, -0.008243139f, 0.0024706698f, 0.4870059f, -0.05806495f, -0.19044831f, 0.025878921f, 2.2684894f, -8.630558f, 0.59490174f, 0.25836894f, 0.66751665f, 1.1896998f, -0.3264831f, 0.0150448f)) + mul(n_0_1, float4x4(-0.12225801f, -0.16386987f, 0.06255123f, -0.02219746f, -0.010646193f, -0.1058921f, 0.117958754f, 0.028280625f, 0.04138802f, 0.13581014f, 0.03964326f, 0.029269528f, -0.0044180597f, -0.013478468f, 0.004534672f, 0.0065846555f)) + mul(n_0_2, float4x4(-0.006416561f, -0.0048043085f, -0.0014221953f, 0.006115899f, -0.005560377f, -0.016729824f, -0.0051215556f, 0.01209466f, 0.0066296062f, 0.015449074f, -0.0011323821f, -0.011811534f, 0.4897111f, 4.4251986f, -0.0022168183f, 0.122793585f)) + float4(-0.65293825f, 3.6021063f, -0.76953715f, 0.41523197f));

	float4 n_1_1 = softplusActivation(mul(n_0_0, float4x4(-0.007686618f, 0.003993181f, -0.002126201f, -0.008847913f, -0.34144494f, -0.04662812f, 0.32179084f, 0.3321178f, -1.3438132f, 0.2947285f, -1.6245822f, -3.1677766f, 0.27384174f, 0.09813872f, 0.039688826f, -0.15398368f)) + mul(n_0_1, float4x4(-0.097192094f, -0.055872407f, 0.02842863f, -0.2660178f, -0.11479358f, 0.023870785f, 0.019218428f, -0.07854254f, -0.034385458f, 0.0287558f, 0.02370287f, -0.0132237105f, 0.0052180495f, 0.007728046f, -0.0021589403f, 0.022660298f)) + mul(n_0_2, float4x4(0.019185185f, 0.0059019946f, -0.0038579542f, 0.015711313f, 0.021970136f, 0.0101357205f, -0.0023922133f, 0.032117415f, -0.01844251f, -0.009855612f, 0.0024947838f, -0.037112035f, 0.51919276f, 0.3758224f, 0.06696041f, 3.063253f)) + float4(-0.71899873f, -1.4537824f, 0.51540214f, 0.81628597f));

	float4 n_1_2 = softplusActivation(mul(n_0_0, float4x4(-0.3467218f, -0.09427567f, -0.008397005f, -0.0053073564f, -1.59056f, -0.3469244f, 0.09179553f, 0.20800142f, -1.3135082f, -1.9590205f, 0.03511449f, -6.1958714f, -0.2076294f, 0.47116378f, 0.35870478f, 0.42011222f)) + mul(n_0_1, float4x4(-0.19472325f, -0.10446924f, -0.07319069f, 0.0062483577f, -0.44975075f, -0.0012534071f, -0.073846065f, -0.032414433f, 0.02668477f, 0.03663785f, -0.03339205f, 0.052386127f, 0.046424378f, -0.029763062f, -0.012878567f, -0.0053451178f)) + mul(n_0_2, float4x4(0.05524517f, -0.03335622f, -0.009808329f, -0.0013638323f, 0.06541056f, -0.050179984f, -0.020462036f, -0.00723026f, -0.07941143f, 0.06261715f, 0.020387027f, 0.0072919456f, 1.2158604f, 1.4005644f, 0.27469924f, 1.672319f)) + float4(-0.92069376f, -1.9051461f, 0.06741556f, 1.6808172f));

	float4 n_2_0 = softplusActivation(mul(n_1_0, float4x4(0.033253554f, 0.2514799f, -0.47489002f, 0.17709675f, -0.93454355f, -4.9281297f, 1.6455258f, 1.8086252f, -0.025282335f, 1.7427753f, -0.69558585f, -0.7008997f, 0.41852206f, -0.06786821f, 0.26934588f, -0.71469784f)) + mul(n_1_1, float4x4(0.41218418f, 2.3291578f, -1.1440773f, 0.24825634f, -0.24795386f, 1.6154559f, -0.1573957f, 0.21139467f, -0.017976705f, 1.8496983f, -0.34619555f, -0.63649696f, -0.32939804f, 1.0029061f, 0.75620157f, 0.024230476f)) + mul(n_1_2, float4x4(0.14757966f, 1.1083307f, -1.3275286f, -0.62876916f, -0.07689063f, -0.13066243f, -0.411701f, -0.35320753f, 0.11922943f, 0.14964291f, 0.6146045f, -0.29347622f, 0.86753535f, 1.1924609f, 0.8232621f, -1.1561381f)) + float4(0.95391834f, -0.21818098f, 0.15288328f, -0.57748663f));

	float4 n_2_1 = softplusActivation(mul(n_1_0, float4x4(-0.099829495f, 0.21903993f, 0.24966757f, -0.19941416f, -3.0584674f, 0.44380245f, -4.5739503f, -3.8992646f, 0.54640365f, 0.9705473f, 1.7216115f, -1.3006129f, 0.789694f, -0.8403205f, 1.1773887f, -0.5118444f)) + mul(n_1_1, float4x4(-0.006720452f, 0.97128725f, 1.947533f, -1.8571621f, 0.31505093f, 0.67227066f, 0.60310036f, -1.9717114f, 0.107970715f, 0.87360567f, 0.70695364f, -0.5856475f, 1.4866256f, -0.86688495f, 1.5770596f, -1.99141f)) + mul(n_1_2, float4x4(-0.11239114f, 0.29842916f, 0.69444877f, 0.9598727f, -0.8768973f, 0.2526784f, -0.5761003f, 1.306914f, 0.22482494f, -0.33688772f, 0.30535504f, -0.23307635f, 0.005835722f, -1.7169566f, 0.9602267f, -3.4472287f)) + float4(0.7229853f, -1.0619978f, -0.5194879f, 1.4729674f));

	float4 n_2_2 = softplusActivation(mul(n_1_0, float4x4(0.31572998f, -0.058287293f, -0.03138976f, -0.48333535f, 1.0678661f, 2.903664f, -1.1383303f, -0.5046703f, 0.27574453f, 0.008171916f, 0.31230307f, -3.5353584f, 0.43335122f, 0.28056124f, -0.19515926f, -1.3963627f)) + mul(n_1_1, float4x4(0.52409995f, -0.23814611f, -0.40568784f, -3.5077577f, 0.89840984f, 0.23934115f, 0.7830328f, -3.3401554f, 0.075201616f, 0.19003974f, 0.24031933f, -2.0528228f, -0.5705977f, 3.0322998f, 0.4893334f, -0.5398592f)) + mul(n_1_2, float4x4(0.05628709f, 0.3271442f, 0.19192241f, 0.448153f, 0.024195842f, 0.70551676f, 0.38900468f, 0.6111832f, 0.51050043f, 0.2502614f, 0.25820476f, -0.3309368f, -0.5672292f, 0.43265453f, 0.31222162f, -1.305751f)) + float4(0.6236204f, 0.79746f, 1.1015867f, 1.6305059f));

	float4 n_3_0 = softplusActivation(mul(n_2_0, float4x4(-0.44841796f, -1.0613227f, -0.32825693f, -0.44467938f, 0.18850224f, -0.45607644f, -0.04487299f, 0.38426796f, -1.2074759f, -0.6678361f, 0.12295343f, -0.8878951f, 0.1266112f, -2.0667465f, 0.002711979f, 0.6023936f)) + mul(n_2_1, float4x4(-0.32774758f, -0.005573633f, -0.25929472f, -0.66021335f, -0.5427341f, -0.13143805f, -0.15410563f, 0.71705556f, 0.3772315f, -0.40819618f, -0.62749654f, 2.9933133f, -2.0536275f, -4.399828f, -1.5248265f, 0.25963253f)) + mul(n_2_2, float4x4(-1.1060655f, -0.02566235f, -0.04336933f, -1.7993786f, -0.93060493f, -0.22007994f, -0.079737656f, -1.0451423f, -0.67186546f, -0.73111844f, 0.5078606f, -0.7515549f, -6.4013634f, -2.5360665f, -0.37882093f, -2.9257858f)) + float4(-0.3970507f, -0.6075026f, -0.58331066f, -0.16950177f));

	float4 n_3_1 = softplusActivation(mul(n_2_0, float4x4(-8.581019f, -0.66430694f, -0.567627f, -1.4780375f, 4.112125f, 0.09281141f, -0.6925747f, 0.022813667f, 0.16484086f, 0.11263986f, -0.35894477f, -0.083472304f, 1.2264513f, -0.1876567f, 1.0634869f, 0.031219114f)) + mul(n_2_1, float4x4(-5.0808434f, -0.23178121f, -1.8003057f, -0.23572661f, -3.0259535f, -0.7021005f, -2.512945f, 0.10001963f, -2.1080835f, 0.086592466f, -0.58609927f, -1.3245374f, -10.578705f, 0.11798349f, -1.7659802f, -3.5993016f)) + mul(n_2_2, float4x4(-1.167879f, 0.049597714f, 0.29787704f, -0.008617571f, -0.23700292f, -0.061246153f, -0.45194796f, 0.04607597f, 4.661218f, -0.18163334f, -0.25056496f, 0.015722984f, 2.0850797f, -0.9552262f, -4.054758f, -2.9226708f)) + float4(0.8390717f, -0.24629034f, 0.08607652f, 1.7859013f));

	float4 n_3_2 = softplusActivation(mul(n_2_0, float4x4(0.01655554f, -0.29643008f, -0.7808513f, -1.012372f, -0.32881737f, -0.5136002f, 0.2581641f, 0.06982019f, -2.312677f, -0.91260594f, -0.24427159f, -1.2363906f, 2.5432634f, 2.1154482f, -2.386109f, -1.5558558f)) + mul(n_2_1, float4x4(0.18360811f, -0.9922153f, -0.51722544f, 0.10930495f, -0.60339874f, -2.083145f, -0.7077438f, -1.160062f, 1.1778392f, -0.12870225f, -0.3754038f, 0.11806149f, -0.607119f, -1.0873811f, -1.6413047f, -1.4105129f)) + mul(n_2_2, float4x4(-0.0077357725f, -0.115812615f, -0.51439536f, -0.33783725f, -0.86517644f, -0.41990793f, -0.51572657f, -0.6461734f, -0.92848253f, 0.3976713f, -0.42519516f, -0.088871054f, -4.214817f, -7.3660536f, -1.1186572f, -2.997806f)) + float4(-0.7495891f, 0.2508324f, -0.65055734f, -0.77969784f));

	float4 n_4_0 = mul(n_3_0, float4x4(-0.017748239f, 0.028092915f, 0.2815576f, -0.7077784f, 0.0010473261f, -0.51522756f, -2.1770673f, -0.19439638f, -0.00044584926f, 0.00054981903f, 0.016714176f, -0.043550618f, 6.4087217e-06f, 3.7564965e-05f, 0.00023114498f, 0.00015135751f)) + mul(n_3_1, float4x4(0.06977348f, 12.344179f, 1.0083216f, 2.0906513f, 0.0036937557f, 0.072464f, 0.27372506f, 0.28606865f, 0.0032817104f, -0.037707772f, -0.09257856f, 0.4766091f, -5.6460303e-05f, 0.0027649675f, 0.0100008445f, -0.008824788f)) + mul(n_3_2, float4x4(9.922158e-06f, 0.00022150556f, 0.00095563644f, 0.00063896255f, 0.0008878253f, 0.006183734f, 0.017130693f, 0.056920517f, 0.01640623f, -0.24011484f, -1.310461f, 0.88788104f, 0.0071942178f, 0.11693997f, 0.4160623f, 0.50269014f)) + float4(-0.0005521105f, -0.01081604f, -0.041150693f, -0.042201076f);

	float4 n_4_1 = mul(n_3_0, float4x4(-0.6681589f, -2.3440657f, -35.464596f, -24.413975f, -1.1557527f, -0.1435802f, -25.307022f, -16.251318f, -0.0494221f, -0.07624626f, -7.6554847f, -2.725106f, 0.00025400275f, 0.0007497017f, -32.155376f, -23.237608f)) + mul(n_3_1, float4x4(4.4468226f, 7.0997105f, -9.493241f, -6.7442226f, 0.4473183f, 1.2180432f, -4.029633f, -3.362478f, -0.35327038f, 3.5496101f, -6.0912085f, -11.619398f, 0.024245229f, -0.45814058f, 1.7320496f, 1.9684027f)) + mul(n_3_2, float4x4(0.0010599404f, 0.0033378266f, -35.68604f, -28.859509f, 0.08943929f, 0.08287503f, -18.563047f, -19.075523f, 0.47855067f, 2.0677238f, -20.405155f, -10.408642f, 0.73266834f, 2.050151f, -21.37863f, -13.554611f)) + float4(-0.066118754f, 0.81889784f, -5.627623f, -6.489567f);

	float4 n_4_2 = mul(n_3_0, float4x4(-19.783789f, -19.605034f, -17.751165f, -20.024137f, -16.066929f, -12.849889f, -11.367902f, -13.109173f, 7.595428f, 8.087704f, 7.0870914f, 6.1341753f, -24.02713f, -26.409832f, -25.666138f, -24.706758f)) + mul(n_3_1, float4x4(5.796277f, -2.7849803f, 2.9654984f, -5.5619063f, 0.46139166f, -5.4324646f, -3.299806f, 1.2333411f, -24.13374f, 3.0387492f, 3.7724326f, -2.262793f, 1.2858562f, 1.2793214f, 1.3694192f, 1.3195822f)) + mul(n_3_2, float4x4(-25.441692f, -18.69978f, -16.319256f, -20.640352f, -16.177612f, -1.4712728f, -1.3631455f, 0.45472977f, -12.72268f, -8.155488f, -8.87449f, -10.236981f, -13.786832f, -12.989115f, -11.057578f, -13.797152f)) + float4(-6.3275433f, -4.907179f, -5.1820035f, -5.105191f);

	_output[0] = n_4_0[0];
	_output[1] = n_4_0[1];
	_output[2] = n_4_0[2];
	_output[3] = n_4_0[3];
	_output[4] = n_4_1[0];
	_output[5] = n_4_1[1];
	_output[6] = n_4_1[2];
	_output[7] = n_4_1[3];
	_output[8] = n_4_2[0];
	_output[9] = n_4_2[1];
	_output[10] = n_4_2[2];
	_output[11] = n_4_2[3];
}
